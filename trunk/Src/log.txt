2011-6-5 0.1c
WebQuicker:
1. 增加 include() 方法，与 loadcode() 的不同之处在于：调用 include() 之后，代码会自动执行；include() 中的路径相对的是主脚本所在的文件夹，而 loadcode() 相对的是网站根目录
2. 调用 include() 方法后，被调用的页面可以接受传参，传参为被调用页面的自身路径
3. 修改 include 方法，修正对相对路径处理不当的 BUG
4. 被 include() 调用的脚本文件可用 owner 代替 ... 获取自身文件路径
   详见 pages/tests/include

2011-6-4 0.1c
WebQuicker:
1. 改为系统服务模式： 每次修改都需要发布，并且双击运行 Publish 文件夹下的 bat 文件 2. 修改默认端口为 80，请检查端口是否被占用
3. 删除后台截图范例（服务程序不应当访问用户桌面）

2011-5-30 0.1c
AAUBlog:
1. 开始制作“发表文章”部分

2011-5-29 0.1c
1. 增加 response.flush 和 response.clear 方法，详见文档
2. 当缓冲区内的内容多到一定程度的时候，自动调用 response.flush 方法输出缓存

2011-5-28 0.1c
1. 增加缓存功能，图片、html、css 等静态内容自动缓存

2011-5-26 0.1b
1. 加强了 URL 的处理，处理反斜杠，以及当访问文件夹时，自动补全结尾的斜杠
2. response, request 两个内置对象设置为全局变量，不再在 loadcode 时传入，更加灵活方便
3. 增加 response.redirect 方法，相见文档

2011-5-24 0.1b
1. 增加默认首页设置支持，储存在 libs/webquicker/parser/_.aau 文件中 indexes 表中

2011-5-23 0.1b
1. 为了数据传输的完整性及软件性能，socket 改回阻塞方式并加以优化

2011-5-22 0.1b
1. 添加了1个应用范例：后台截图
2. 修正了 raw.closehandle() 位置不恰当导致无效句柄的问题
3. 修改了线程结束的方式，线程结束更安全
4. 加大接收数据时的缓冲区大小至 2KB，解决 Firefox 下有时“被重置”的问题

2011-5-19 0.1b
1. 修正了只能使用本机IP (localhost 和 127.0.0.1) 访问，而诸如 192.168.1.x 或外部IP无法访问的问题

2011-5-18 0.1b
1. 改用多线程方式响应客户端请求（限制了最大线程数），更加高效，并且避免了一个客户卡死阻塞整个应用的问题
2. 完善了内置对象 request 和 response，详见附件
3. 处理了 GET、POST、Cookie 传参，并可设置客户端 Cookie
4. 支持了较大文件的传输