
//把关键字改成中文
def 开始 = begin;
def 结束 = end;

def 且 = and;
def 或 = or;
def 取反 = not;

def 真 = true;
def 假 = false;
def 空值 = null

def 定义名字空间 = namespace 
def 导入 = import
def 当前名字空间 = self 
//def 所有者 = owner;

def 定义变量 = var;
def 定义函数 = function
def 返回 = return

def 定义类 = class;
def 构造器 = ctor;

def 如果 = if;
def 又如 = elseif;
def 否则 = else;
def 判断 = select;
def 为 = case;
def 为其他 = else;
 
def 计次循环 = for;
def 变量循环 = for;
def 迭代于 = in;
def 判断循环 = while;
def 循环判断首 = do;
def 循环判断尾 = while;
def 到循环尾 = continue;
def 跳出循环 = break ;

def 容错 = try;
def 捕获 = catch;
namespace preload.中文编程

/***intellisense()
且 =  逻辑与运算符
或 =  逻辑或运算符
取反 = 逻辑非运算符

真 =  逻辑值：真(true,所有非null、非零值) 
假 = 逻辑值：假(false,null、零)
空值 = 空值
 
导入 = 导入外部名字空间
定义名字空间 = @定义名字空间 __{//定义变量的默认名字空间\n//使用..操作符访问顶层名字空间\n}\n 
当前名字空间 = 当前默认名字空间

//语句块
开始 =  @开始//语句块开始\n__\n\n结束;//语句块结束\n 
结束 =  @结束;//表示语句块结束 
定义函数 = @定义函数(__) 开始//定义函数\n\n结束;\n
定义类 = @定义类{//定义类\n构造器(__ )开始\n	var 当前对象 = this;\n结束;//所有成员必须用分号分隔\n ;\n ;\n ;\n}\n

//条件语句 
如果 =  @如果(__){    }//条件判断语句 
否则 =  @否则\n{\n__\n}\n
又如 = @又如(__){//否则判断条件\n\n\n}\n
判断 = @判断(__/*选择条件*/) {\n	为 2 {\n	}\n	为 1,9,10 {\n	}\n	为 10;20 {\n	}\n	为 !=0 {\n	}\n	为其他 {\n	}\n}

//循环语句
判断循环 = @判断循环(__/*请在这里输入循环条件*/){//如果条件符合，则循环执行下面的代码\n\n\n}\n  
循环判断 = @循环判断首{//首先无条件进入循环语句块并执行\n\n\n}循环判断尾(__)//如果条件符合，继续执行循环语句块\n    
计次循环 = @计次循环(i=1;__;1){//循环遍历table数组示例：for i=1 to #tab\n\n\n}\n 
变量循环 = @变量循环(k,v 迭代于 __){//循环遍历table、迭代器对象\n\n\n}\n

//容错语句 
容错 = @容错{\n__\n}\n捕获( 错误 ){\n__\n}\n

//其他常用语句
定义变量 =  @定义变量__ = ;//声明一个局部变量，作用域限制在当前语句块内部
返回 = @返回 __; //返回一个或多个值.
跳出循环 =  @跳出循环 __;//中断循环，或指定要中断的循环级别。 
到循环尾 = @到循环尾 __;//跳过本次循环并继续下一次，或指定要跳过的循环级别。
end intellisense***/

