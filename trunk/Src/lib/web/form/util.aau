import com.interface.IOleControl  
import web.form;
namespace web.form.util;
import win.reg;

::Urlmon := ..raw.loadDll("Urlmon.dll")
UrlMkSetSessionOption = Urlmon.api("UrlMkSetSessionOption","int(INT option, pointer buffer,INT len,pointer reserved)" )

var  IOleControl = ..com.interface.IOleControl 

ambientPropertyChange = function(wb,id){
	var doc = wb.document;
	var ctrl = IOleControl.Query( doc)   
	ctrl.OnAmbientPropertyChange(id)
	ctrl = null; 
	collectgarbage("collect")	
}

dlCtrl = function(wb,dlctl){
	wb.dlControl = dlctl;
	ambientPropertyChange(wb,-5512) 
}

setUserAgent = function(wb,agent){ 
	wb.agent = agent;
	UrlMkSetSessionOption(agent?0x10000001:0x10000002,agent,#agent);
	ambientPropertyChange(wb,-5513) 
	
}

refreshOption = function(){
	UrlMkSetSessionOption(  39/*_INTERNET_OPTION_SETTINGS_CHANGED*/, ,0 );
	UrlMkSetSessionOption(  37/*_INTERNET_OPTION_REFRESH*/, ,0  ); 
    ::SendMessage(0xFFFF/*_HWND_BROADCAST*/, 0x1A/*_WM_WININICHANGE*/)
}


enableTab = function(v=1){
    var tpath = ..io.splitpath( ..io._exepath )
	var reg = win.reg("HKEY_CURRENT_USER\SOFTWARE\Microsoft\Internet Explorer\Main\FeatureControl\FEATURE_TABBED_BROWSING")
	if( reg.queryValue(tpath.file) ){
		reg.close(); 
		return;
	}
	reg.setDwValue( tpath.file,v?1:0)
	reg.close()
	refreshOption() 
}

//跨域支持
import com.interface.IServiceProvider;
var IID_IWebBrowserApp = ..win.guid.fromString("{0002DF05-0000-0000-C000-000000000046}")
var IID_IWebBrowser2 = ..win.guid.fromString("{D30C1661-CDAF-11D0-8A3E-00C04FC9E26E}")
queryBrowser = function(ele){
	if(ele.contentWindow )
		ele = ele.contentWindow;
		
    var service = ..com.interface( ele,..com.interface.IServiceProvider) 
    var hr,obj = service.QueryService( 
        IID_IWebBrowserApp
        ,IID_IWebBrowser2
        )
    ..com.interface.checkError(hr,2)
    return ..com.QueryObject(obj )
}
queryDocument = function(ele){
	var ele = queryBrowser(ele)
	if(ele ) 
		return ele.getDocument(); 
}
crossDomain = function(){
	var meta = ..web.form.metaProperty;
	meta.getDoc = function(frame){ 
		if(frame===null){
			var doc = owner._browser.Document; 
			return (type(doc)==type.function)?doc() : doc;
		}
		
		var ele = owner.getFrame(frame); 
   		if(ele)
   			return queryDocument(ele)
	}	
	meta.getWebForm = function(frame){
		if(frame===null)
			return owner;
		
		var wnd = owner.getFrame(frame) 
   		if(wnd){ 
   			var web = {}
   			web._form ={hwnd = owner.hwnd;web=web} 
   			web._object = ..web.form.util.queryBrowser(wnd)
   			web._browser = web._object;
   			web@ = meta
   			return web;  
   		}
	}
}

 
/**intellisense(web.form.util)
dlCtrl(wb,_DLCTL__) =  修改web窗体下载控制参数
dlCtrl(wb) = 恢复默认设置
dlCtrl(wb,0) = 禁止下载图片
setUserAgent(wb) = 恢复默认useragent
setUserAgent(wb,"AAuto Explorer") = 恢复默认useragen
enableTab() = 启用tab选项卡支持
enableTab(false) = 禁用tab选项卡支持
refreshOption() = 刷新web设置
crossDomain() = 允许所有web.form对象跨域访问框架
queryDocument(__/*frame对象*/) = 跨域获取框架文档对象
?.queryDocument = !document.
end intellisense**/
